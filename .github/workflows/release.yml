name: Release

on:
  push:
    branches:
      - main

jobs:
  prepare:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v3.3.0
        with:
          go-version: 1.16

      - shell: bash
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build c-shared library
        run: |
          cd go && go build -o awesome.so -buildmode=c-shared awesome.go

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ runner.os }}-${{ env.sha_short }}
          path: go/awesome.so

  release:
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 8
          cache: 'maven'

      # copy the cashes from prepare
      - shell: bash
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Download linux artifact
        uses: actions/download-artifact@v3
        with:
          name: Linux-${{ env.sha_short }}
          path: ./dist/linux
      - name: Download darwin artifact
        uses: actions/download-artifact@v3
        with:
          name: macOS-${{ env.sha_short }}
          path: ./dist/darwin
      - name: Download windows artifact
        uses: actions/download-artifact@v3
        with:
          name: Windows-${{ env.sha_short }}
          path: ./dist/windows

      - name: Publish to GitHub Packages Apache Maven
        env:
          GITHUB_USERNAME: ${{ secrets.GITHUB_USERNAME }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cp dist/linux/awesome.so src/main/resources/linux-x86-64/libawesome.so
          cp dist/darwin/awesome.so src/main/resources/darwin-x86-64/libawesome.dylib
          cp dist/windows/awesome.so src/main/resources/win32-x86-64/awesome.dll

          mvn -B deploy
